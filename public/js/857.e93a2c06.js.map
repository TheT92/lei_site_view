{"version":3,"file":"public/js/857.e93a2c06.js","mappings":"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","sources":["webpack://my_site/./src/views/projectDetail.vue","webpack://my_site/./src/components/img-viewer.vue","webpack://my_site/../../src/js/util/util.js","webpack://my_site/../../src/js/core/eventable.js","webpack://my_site/../../src/js/slide/placeholder.js","webpack://my_site/../../src/js/slide/content.js","webpack://my_site/../../src/js/util/viewport-size.js","webpack://my_site/../../src/js/slide/zoom-level.js","webpack://my_site/../../src/js/slide/loader.js","webpack://my_site/../../src/js/core/base.js","webpack://my_site/../../src/js/lightbox/lightbox.js","webpack://my_site/src/components/img-viewer.vue","webpack://my_site/./src/components/img-viewer.vue?6ea1","webpack://my_site/./src/components/img-viewer.vue?c6a4","webpack://my_site/src/views/projectDetail.vue","webpack://my_site/./src/views/projectDetail.vue?a3bc","webpack://my_site/./src/views/projectDetail.vue?af6c"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"project page-container overflow-hidden\"},[_c('h1',{staticClass:\"project-name\"},[_vm._v(_vm._s(_vm.currentPorject.name))]),_c('div',{staticClass:\"d-flex text-wrap\"},[_c('div',{staticClass:\"mr-8 flex-1\"},[_c('h3',{staticClass:\"mt-0 mb-text\"},[_vm._v(\"Company\")]),_c('p',{staticClass:\"text-light mt-0 mb-content\"},[_vm._v(_vm._s(_vm.currentPorject.company))])]),_c('div',{staticClass:\"flex-3\"},[_c('h3',{staticClass:\"mt-0 mb-text\"},[_vm._v(\"My Role\")]),_c('p',{staticClass:\"text-light mt-0 mb-content\"},[_vm._v(_vm._s(_vm.currentPorject.role))])])]),_c('div',{staticClass:\"d-flex text-wrap mb-paragraph\"},[_c('div',{staticClass:\"mr-8 flex-1\"},[_c('h3',{staticClass:\"mt-0 mb-text\"},[_vm._v(\"Duration\")]),_c('p',{staticClass:\"text-light mt-0 mb-0\"},[_vm._v(_vm._s(_vm.currentPorject.year))])]),_c('div',{staticClass:\"flex-3\"},[_c('h3',{staticClass:\"mt-0 mb-text\"},[_vm._v(\"My Deliverable\")]),_c('p',{staticClass:\"text-light mt-0 mb-0\"},[_vm._v(_vm._s(_vm.currentPorject.deliverable))])])]),(!!_vm.currentPorject.paragraphs && _vm.currentPorject.paragraphs.length > 0)?_vm._l((_vm.currentPorject.paragraphs),function(v,i){return _c('div',{key:i,staticClass:\"info-paragraph\"},[_c('h2',{domProps:{\"innerHTML\":_vm._s(v.title)}}),_vm._l((v.content),function(item,index){return [(item.type && item.type == 'img')?_c('img',{key:index + 'i',staticClass:\"info-img\",class:item.class,attrs:{\"src\":_vm.getImg(item.url)}}):(item.type && item.type == 'rich')?_c('div',{key:index + 'r',class:item.class,domProps:{\"innerHTML\":_vm._s(item.content)}}):(item.type && item.type == 'slide')?_c('div',{key:index + 's',staticClass:\"slide-box\",class:item.class,on:{\"mouseleave\":function($event){return _vm.resetSlide(item.name)}}},[_vm._l((item.images),function(temp,idx){return [_c('img',{key:idx,staticClass:\"slide-img\",class:_vm.getClass(idx, item.name),attrs:{\"src\":_vm.getImg(temp)},on:{\"mouseenter\":function($event){return _vm.onHover(idx, item.name)}}})]})],2):(item.type && item.type == 'swipe')?_c('div',{key:index + 'sw',staticClass:\"position-relative w-100 overflow-hidden\",class:item.class},[_c('img',{staticClass:\"img-icon arrow-left\",attrs:{\"src\":_vm.getImg('aftersale/arrowleft.png')},on:{\"click\":function($event){return _vm.onSwipe(0)}}}),_c('img',{staticClass:\"img-icon arrow-right\",attrs:{\"src\":_vm.getImg('aftersale/arrowright.png')},on:{\"click\":function($event){return _vm.onSwipe(1)}}}),_vm._l((item.images),function(temp,idx){return [_c('img',{key:idx,staticClass:\"w-100 swipe-img\",class:idx == 0 && _vm.swipeIndex ? 'swiped' : '',attrs:{\"src\":_vm.getImg(temp)}})]})],2):(item.type && item.type == 'imgViewer')?_c('img-viewer',{key:index + 'iv',class:item.className,attrs:{\"galleryID\":item.id,\"images\":item.images}}):_c('p',{key:index + 'p',staticClass:\"info-text\",domProps:{\"innerHTML\":_vm._s(item)}})]})],2)}):_vm._e()],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"w-100 overflow-hidden clear-float img-viewer\",class:_vm.className,attrs:{\"id\":_vm.galleryID}},_vm._l((_vm.imagesData),function(image,key){return _c('a',{key:key,staticClass:\"d-block quartor card p-4 float-left\",class:key == _vm.imagesData.length - 1 ? 'mr-0' : '',attrs:{\"href\":_vm.getImg(image.largeURL),\"target\":\"_blank\",\"rel\":\"noreferrer\",\"data-pswp-width\":image.width,\"data-pswp-height\":image.height}},[_c('img',{staticClass:\"w-100\",attrs:{\"src\":_vm.getImg(image.thumbnailURL),\"alt\":\"\"}})])}),0)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n/**\r\n * @template {keyof HTMLElementTagNameMap} T\r\n * @param {string} className\r\n * @param {T} tagName\r\n * @param {Node} [appendToEl]\r\n * @returns {HTMLElementTagNameMap[T]}\r\n */\r\nexport function createElement(className, tagName, appendToEl) {\r\n  const el = document.createElement(tagName);\r\n  if (className) {\r\n    el.className = className;\r\n  }\r\n  if (appendToEl) {\r\n    appendToEl.appendChild(el);\r\n  }\r\n  return el;\r\n}\r\n\r\n/**\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {Point}\r\n */\r\nexport function equalizePoints(p1, p2) {\r\n  p1.x = p2.x;\r\n  p1.y = p2.y;\r\n  if (p2.id !== undefined) {\r\n    p1.id = p2.id;\r\n  }\r\n  return p1;\r\n}\r\n\r\n/**\r\n * @param {Point} p\r\n */\r\nexport function roundPoint(p) {\r\n  p.x = Math.round(p.x);\r\n  p.y = Math.round(p.y);\r\n}\r\n\r\n/**\r\n * Returns distance between two points.\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {number}\r\n */\r\nexport function getDistanceBetween(p1, p2) {\r\n  const x = Math.abs(p1.x - p2.x);\r\n  const y = Math.abs(p1.y - p2.y);\r\n  return Math.sqrt((x * x) + (y * y));\r\n}\r\n\r\n/**\r\n * Whether X and Y positions of points are equal\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {boolean}\r\n */\r\nexport function pointsEqual(p1, p2) {\r\n  return p1.x === p2.x && p1.y === p2.y;\r\n}\r\n\r\n/**\r\n * The float result between the min and max values.\r\n *\r\n * @param {number} val\r\n * @param {number} min\r\n * @param {number} max\r\n * @returns {number}\r\n */\r\nexport function clamp(val, min, max) {\r\n  return Math.min(Math.max(val, min), max);\r\n}\r\n\r\n/**\r\n * Get transform string\r\n *\r\n * @param {number} x\r\n * @param {number} [y]\r\n * @param {number} [scale]\r\n * @returns {string}\r\n */\r\nexport function toTransformString(x, y, scale) {\r\n  let propValue = `translate3d(${x}px,${y || 0}px,0)`;\r\n\r\n  if (scale !== undefined) {\r\n    propValue += ` scale3d(${scale},${scale},1)`;\r\n  }\r\n\r\n  return propValue;\r\n}\r\n\r\n/**\r\n * Apply transform:translate(x, y) scale(scale) to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {number} x\r\n * @param {number} [y]\r\n * @param {number} [scale]\r\n */\r\nexport function setTransform(el, x, y, scale) {\r\n  el.style.transform = toTransformString(x, y, scale);\r\n}\r\n\r\nconst defaultCSSEasing = 'cubic-bezier(.4,0,.22,1)';\r\n\r\n/**\r\n * Apply CSS transition to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string} [prop] CSS property to animate\r\n * @param {number} [duration] in ms\r\n * @param {string} [ease] CSS easing function\r\n */\r\nexport function setTransitionStyle(el, prop, duration, ease) {\r\n  // inOut: 'cubic-bezier(.4, 0, .22, 1)', // for \"toggle state\" transitions\r\n  // out: 'cubic-bezier(0, 0, .22, 1)', // for \"show\" transitions\r\n  // in: 'cubic-bezier(.4, 0, 1, 1)'// for \"hide\" transitions\r\n  el.style.transition = prop\r\n    ? `${prop} ${duration}ms ${ease || defaultCSSEasing}`\r\n    : 'none';\r\n}\r\n\r\n/**\r\n * Apply width and height CSS properties to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string | number} w\r\n * @param {string | number} h\r\n */\r\nexport function setWidthHeight(el, w, h) {\r\n  el.style.width = (typeof w === 'number') ? `${w}px` : w;\r\n  el.style.height = (typeof h === 'number') ? `${h}px` : h;\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n */\r\nexport function removeTransitionStyle(el) {\r\n  setTransitionStyle(el);\r\n}\r\n\r\n/**\r\n * @param {HTMLImageElement} img\r\n * @returns {Promise<HTMLImageElement | void>}\r\n */\r\nexport function decodeImage(img) {\r\n  if ('decode' in img) {\r\n    return img.decode().catch(() => {});\r\n  }\r\n\r\n  if (img.complete) {\r\n    return Promise.resolve(img);\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    img.onload = () => resolve(img);\r\n    img.onerror = reject;\r\n  });\r\n}\r\n\r\n/** @typedef {LOAD_STATE[keyof LOAD_STATE]} LoadState */\r\n/** @type {{ IDLE: 'idle'; LOADING: 'loading'; LOADED: 'loaded'; ERROR: 'error' }} */\r\nexport const LOAD_STATE = {\r\n  IDLE: 'idle',\r\n  LOADING: 'loading',\r\n  LOADED: 'loaded',\r\n  ERROR: 'error',\r\n};\r\n\r\n\r\n/**\r\n * Check if click or keydown event was dispatched\r\n * with a special key or via mouse wheel.\r\n *\r\n * @param {MouseEvent | KeyboardEvent} e\r\n * @returns {boolean}\r\n */\r\nexport function specialKeyUsed(e) {\r\n  return ('button' in e && e.button === 1) || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey;\r\n}\r\n\r\n/**\r\n * Parse `gallery` or `children` options.\r\n *\r\n * @param {import('../photoswipe.js').ElementProvider} [option]\r\n * @param {string} [legacySelector]\r\n * @param {HTMLElement | Document} [parent]\r\n * @returns HTMLElement[]\r\n */\r\nexport function getElementsFromOption(option, legacySelector, parent = document) {\r\n  /** @type {HTMLElement[]} */\r\n  let elements = [];\r\n\r\n  if (option instanceof Element) {\r\n    elements = [option];\r\n  } else if (option instanceof NodeList || Array.isArray(option)) {\r\n    elements = Array.from(option);\r\n  } else {\r\n    const selector = typeof option === 'string' ? option : legacySelector;\r\n    if (selector) {\r\n      elements = Array.from(parent.querySelectorAll(selector));\r\n    }\r\n  }\r\n\r\n  return elements;\r\n}\r\n\r\n/**\r\n * Check if variable is PhotoSwipe class\r\n *\r\n * @param {any} fn\r\n * @returns {boolean}\r\n */\r\nexport function isPswpClass(fn) {\r\n  return typeof fn === 'function'\r\n    && fn.prototype\r\n    && fn.prototype.goTo;\r\n}\r\n\r\n/**\r\n * Check if browser is Safari\r\n *\r\n * @returns {boolean}\r\n */\r\nexport function isSafari() {\r\n  return !!(navigator.vendor && navigator.vendor.match(/apple/i));\r\n}\r\n\r\n","/** @typedef {import('../lightbox/lightbox.js').default} PhotoSwipeLightbox */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\r\n/** @typedef {import('../ui/ui-element.js').UIElementData} UIElementData */\r\n/** @typedef {import('../slide/content.js').default} ContentDefault */\r\n/** @typedef {import('../slide/slide.js').default} Slide */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n/** @typedef {import('../slide/zoom-level.js').default} ZoomLevel */\r\n/** @typedef {import('../slide/get-thumb-bounds.js').Bounds} Bounds */\r\n\r\n/**\r\n * Allow adding an arbitrary props to the Content\r\n * https://photoswipe.com/custom-content/#using-webp-image-format\r\n * @typedef {ContentDefault & Record<string, any>} Content\r\n */\r\n/** @typedef {{ x?: number; y?: number }} Point */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeEventsMap https://photoswipe.com/events/\r\n *\r\n *\r\n * https://photoswipe.com/adding-ui-elements/\r\n *\r\n * @prop {undefined} uiRegister\r\n * @prop {{ data: UIElementData }} uiElementCreate\r\n *\r\n *\r\n * https://photoswipe.com/events/#initialization-events\r\n *\r\n * @prop {undefined} beforeOpen\r\n * @prop {undefined} firstUpdate\r\n * @prop {undefined} initialLayout\r\n * @prop {undefined} change\r\n * @prop {undefined} afterInit\r\n * @prop {undefined} bindEvents\r\n *\r\n *\r\n * https://photoswipe.com/events/#opening-or-closing-transition-events\r\n *\r\n * @prop {undefined} openingAnimationStart\r\n * @prop {undefined} openingAnimationEnd\r\n * @prop {undefined} closingAnimationStart\r\n * @prop {undefined} closingAnimationEnd\r\n *\r\n *\r\n * https://photoswipe.com/events/#closing-events\r\n *\r\n * @prop {undefined} close\r\n * @prop {undefined} destroy\r\n *\r\n *\r\n * https://photoswipe.com/events/#pointer-and-gesture-events\r\n *\r\n * @prop {{ originalEvent: PointerEvent }} pointerDown\r\n * @prop {{ originalEvent: PointerEvent }} pointerMove\r\n * @prop {{ originalEvent: PointerEvent }} pointerUp\r\n * @prop {{ bgOpacity: number }} pinchClose can be default prevented\r\n * @prop {{ panY: number }} verticalDrag can be default prevented\r\n *\r\n *\r\n * https://photoswipe.com/events/#slide-content-events\r\n *\r\n * @prop {{ content: Content }} contentInit\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoad can be default prevented\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoadImage can be default prevented\r\n * @prop {{ content: Content; slide: Slide; isError?: boolean }} loadComplete\r\n * @prop {{ content: Content; slide: Slide }} loadError\r\n * @prop {{ content: Content; width: number; height: number }} contentResize can be default prevented\r\n * @prop {{ content: Content; width: number; height: number; slide: Slide }} imageSizeChange\r\n * @prop {{ content: Content }} contentLazyLoad can be default prevented\r\n * @prop {{ content: Content }} contentAppend can be default prevented\r\n * @prop {{ content: Content }} contentActivate can be default prevented\r\n * @prop {{ content: Content }} contentDeactivate can be default prevented\r\n * @prop {{ content: Content }} contentRemove can be default prevented\r\n * @prop {{ content: Content }} contentDestroy can be default prevented\r\n *\r\n *\r\n * undocumented\r\n *\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} imageClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} bgClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} tapAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} doubleTapAction can be default prevented\r\n *\r\n * @prop {{ originalEvent: KeyboardEvent }} keydown can be default prevented\r\n * @prop {{ x: number; dragging: boolean }} moveMainScroll\r\n * @prop {{ slide: Slide }} firstZoomPan\r\n * @prop {{ slide: Slide | undefined, data: SlideData, index: number }} gettingData\r\n * @prop {undefined} beforeResize\r\n * @prop {undefined} resize\r\n * @prop {undefined} viewportSize\r\n * @prop {undefined} updateScrollOffset\r\n * @prop {{ slide: Slide }} slideInit\r\n * @prop {{ slide: Slide }} afterSetContent\r\n * @prop {{ slide: Slide }} slideLoad\r\n * @prop {{ slide: Slide }} appendHeavy can be default prevented\r\n * @prop {{ slide: Slide }} appendHeavyContent\r\n * @prop {{ slide: Slide }} slideActivate\r\n * @prop {{ slide: Slide }} slideDeactivate\r\n * @prop {{ slide: Slide }} slideDestroy\r\n * @prop {{ destZoomLevel: number, centerPoint: Point | undefined, transitionDuration: number | false | undefined }} beforeZoomTo\r\n * @prop {{ slide: Slide }} zoomPanUpdate\r\n * @prop {{ slide: Slide }} initialZoomPan\r\n * @prop {{ slide: Slide }} calcSlideSize\r\n * @prop {undefined} resolutionChanged\r\n * @prop {{ originalEvent: WheelEvent }} wheel can be default prevented\r\n * @prop {{ content: Content }} contentAppendImage can be default prevented\r\n * @prop {{ index: number; itemData: SlideData }} lazyLoadSlide can be default prevented\r\n * @prop {undefined} lazyLoad\r\n * @prop {{ slide: Slide }} calcBounds\r\n * @prop {{ zoomLevels: ZoomLevel, slideData: SlideData }} zoomLevelsUpdate\r\n *\r\n *\r\n * legacy\r\n *\r\n * @prop {undefined} init\r\n * @prop {undefined} initialZoomIn\r\n * @prop {undefined} initialZoomOut\r\n * @prop {undefined} initialZoomInEnd\r\n * @prop {undefined} initialZoomOutEnd\r\n * @prop {{ dataSource: DataSource | undefined, numItems: number }} numItems\r\n * @prop {{ itemData: SlideData; index: number }} itemData\r\n * @prop {{ index: number, itemData: SlideData, instance: PhotoSwipe }} thumbBounds\r\n */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeFiltersMap https://photoswipe.com/filters/\r\n *\r\n * @prop {(numItems: number, dataSource: DataSource | undefined) => number} numItems\r\n * Modify the total amount of slides. Example on Data sources page.\r\n * https://photoswipe.com/filters/#numitems\r\n *\r\n * @prop {(itemData: SlideData, index: number) => SlideData} itemData\r\n * Modify slide item data. Example on Data sources page.\r\n * https://photoswipe.com/filters/#itemdata\r\n *\r\n * @prop {(itemData: SlideData, element: HTMLElement, linkEl: HTMLAnchorElement) => SlideData} domItemData\r\n * Modify item data when it's parsed from DOM element. Example on Data sources page.\r\n * https://photoswipe.com/filters/#domitemdata\r\n *\r\n * @prop {(clickedIndex: number, e: MouseEvent, instance: PhotoSwipeLightbox) => number} clickedIndex\r\n * Modify clicked gallery item index.\r\n * https://photoswipe.com/filters/#clickedindex\r\n *\r\n * @prop {(placeholderSrc: string | false, content: Content) => string | false} placeholderSrc\r\n * Modify placeholder image source.\r\n * https://photoswipe.com/filters/#placeholdersrc\r\n *\r\n * @prop {(isContentLoading: boolean, content: Content) => boolean} isContentLoading\r\n * Modify if the content is currently loading.\r\n * https://photoswipe.com/filters/#iscontentloading\r\n *\r\n * @prop {(isContentZoomable: boolean, content: Content) => boolean} isContentZoomable\r\n * Modify if the content can be zoomed.\r\n * https://photoswipe.com/filters/#iscontentzoomable\r\n *\r\n * @prop {(useContentPlaceholder: boolean, content: Content) => boolean} useContentPlaceholder\r\n * Modify if the placeholder should be used for the content.\r\n * https://photoswipe.com/filters/#usecontentplaceholder\r\n *\r\n * @prop {(isKeepingPlaceholder: boolean, content: Content) => boolean} isKeepingPlaceholder\r\n * Modify if the placeholder should be kept after the content is loaded.\r\n * https://photoswipe.com/filters/#iskeepingplaceholder\r\n *\r\n *\r\n * @prop {(contentErrorElement: HTMLElement, content: Content) => HTMLElement} contentErrorElement\r\n * Modify an element when the content has error state (for example, if image cannot be loaded).\r\n * https://photoswipe.com/filters/#contenterrorelement\r\n *\r\n * @prop {(element: HTMLElement, data: UIElementData) => HTMLElement} uiElement\r\n * Modify a UI element that's being created.\r\n * https://photoswipe.com/filters/#uielement\r\n *\r\n * @prop {(thumbnail: HTMLElement | null | undefined, itemData: SlideData, index: number) => HTMLElement} thumbEl\r\n * Modify the thumbnail element from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbel\r\n *\r\n * @prop {(thumbBounds: Bounds | undefined, itemData: SlideData, index: number) => Bounds} thumbBounds\r\n * Modify the thumbnail bounds from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbbounds\r\n *\r\n * @prop {(srcsetSizesWidth: number, content: Content) => number} srcsetSizesWidth\r\n *\r\n * @prop {(preventPointerEvent: boolean, event: PointerEvent, pointerType: string) => boolean} preventPointerEvent\r\n *\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeFiltersMap} T\r\n * @typedef {{ fn: PhotoSwipeFiltersMap[T], priority: number }} Filter\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {PhotoSwipeEventsMap[T] extends undefined ? PhotoSwipeEvent<T> : PhotoSwipeEvent<T> & PhotoSwipeEventsMap[T]} AugmentedEvent\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {(event: AugmentedEvent<T>) => void} EventCallback\r\n */\r\n\r\n/**\r\n * Base PhotoSwipe event object\r\n *\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n */\r\nclass PhotoSwipeEvent {\r\n  /**\r\n   * @param {T} type\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   */\r\n  constructor(type, details) {\r\n    this.type = type;\r\n    this.defaultPrevented = false;\r\n    if (details) {\r\n      Object.assign(this, details);\r\n    }\r\n  }\r\n\r\n  preventDefault() {\r\n    this.defaultPrevented = true;\r\n  }\r\n}\r\n\r\n/**\r\n * PhotoSwipe base class that can listen and dispatch for events.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox, extended by base.js\r\n */\r\nclass Eventable {\r\n  constructor() {\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeEventsMap]?: ((event: AugmentedEvent<T>) => void)[] }}\r\n     */\r\n    this._listeners = {};\r\n\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeFiltersMap]?: Filter<T>[] }}\r\n     */\r\n    this._filters = {};\r\n\r\n    /** @type {PhotoSwipe | undefined} */\r\n    this.pswp = undefined;\r\n\r\n    /** @type {PhotoSwipeOptions | undefined} */\r\n    this.options = undefined;\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   * @param {number} priority\r\n   */\r\n  addFilter(name, fn, priority = 100) {\r\n    if (!this._filters[name]) {\r\n      this._filters[name] = [];\r\n    }\r\n\r\n    this._filters[name]?.push({ fn, priority });\r\n    this._filters[name]?.sort((f1, f2) => f1.priority - f2.priority);\r\n\r\n    this.pswp?.addFilter(name, fn, priority);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   */\r\n  removeFilter(name, fn) {\r\n    if (this._filters[name]) {\r\n      // @ts-expect-error\r\n      this._filters[name] = this._filters[name].filter(filter => (filter.fn !== fn));\r\n    }\r\n\r\n    if (this.pswp) {\r\n      this.pswp.removeFilter(name, fn);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {Parameters<PhotoSwipeFiltersMap[T]>} args\r\n   * @returns {Parameters<PhotoSwipeFiltersMap[T]>[0]}\r\n   */\r\n  applyFilters(name, ...args) {\r\n    this._filters[name]?.forEach((filter) => {\r\n      // @ts-expect-error\r\n      args[0] = filter.fn.apply(this, args);\r\n    });\r\n    return args[0];\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  on(name, fn) {\r\n    if (!this._listeners[name]) {\r\n      this._listeners[name] = [];\r\n    }\r\n    this._listeners[name]?.push(fn);\r\n\r\n    // When binding events to lightbox,\r\n    // also bind events to PhotoSwipe Core,\r\n    // if it's open.\r\n    this.pswp?.on(name, fn);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  off(name, fn) {\r\n    if (this._listeners[name]) {\r\n      // @ts-expect-error\r\n      this._listeners[name] = this._listeners[name].filter(listener => (fn !== listener));\r\n    }\r\n\r\n    this.pswp?.off(name, fn);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   * @returns {AugmentedEvent<T>}\r\n   */\r\n  dispatch(name, details) {\r\n    if (this.pswp) {\r\n      return this.pswp.dispatch(name, details);\r\n    }\r\n\r\n    const event = /** @type {AugmentedEvent<T>} */ (new PhotoSwipeEvent(name, details));\r\n\r\n    this._listeners[name]?.forEach((listener) => {\r\n      listener.call(this, event);\r\n    });\r\n\r\n    return event;\r\n  }\r\n}\r\n\r\nexport default Eventable;\r\n","import { createElement, setWidthHeight, toTransformString } from '../util/util.js';\r\n\r\nclass Placeholder {\r\n  /**\r\n   * @param {string | false} imageSrc\r\n   * @param {HTMLElement} container\r\n   */\r\n  constructor(imageSrc, container) {\r\n    // Create placeholder\r\n    // (stretched thumbnail or simple div behind the main image)\r\n    /** @type {HTMLImageElement | HTMLDivElement | null} */\r\n    this.element = createElement(\r\n      'pswp__img pswp__img--placeholder',\r\n      imageSrc ? 'img' : 'div',\r\n      container\r\n    );\r\n\r\n    if (imageSrc) {\r\n      const imgEl = /** @type {HTMLImageElement} */ (this.element);\r\n      imgEl.decoding = 'async';\r\n      imgEl.alt = '';\r\n      imgEl.src = imageSrc;\r\n      imgEl.setAttribute('role', 'presentation');\r\n    }\r\n\r\n    this.element.setAttribute('aria-hidden', 'true');\r\n  }\r\n\r\n  /**\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.element.tagName === 'IMG') {\r\n      // Use transform scale() to modify img placeholder size\r\n      // (instead of changing width/height directly).\r\n      // This helps with performance, specifically in iOS15 Safari.\r\n      setWidthHeight(this.element, 250, 'auto');\r\n      this.element.style.transformOrigin = '0 0';\r\n      this.element.style.transform = toTransformString(0, 0, width / 250);\r\n    } else {\r\n      setWidthHeight(this.element, width, height);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    if (this.element?.parentNode) {\r\n      this.element.remove();\r\n    }\r\n    this.element = null;\r\n  }\r\n}\r\n\r\nexport default Placeholder;\r\n","import { createElement, isSafari, LOAD_STATE, setWidthHeight } from '../util/util.js';\r\nimport Placeholder from './placeholder.js';\r\n\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../util/util.js').LoadState} LoadState */\r\n\r\nclass Content {\r\n  /**\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n   * @param {number} index\r\n   */\r\n  constructor(itemData, instance, index) {\r\n    this.instance = instance;\r\n    this.data = itemData;\r\n    this.index = index;\r\n\r\n    /** @type {HTMLImageElement | HTMLDivElement | undefined} */\r\n    this.element = undefined;\r\n    /** @type {Placeholder | undefined} */\r\n    this.placeholder = undefined;\r\n    /** @type {Slide | undefined} */\r\n    this.slide = undefined;\r\n\r\n    this.displayedImageWidth = 0;\r\n    this.displayedImageHeight = 0;\r\n\r\n    this.width = Number(this.data.w) || Number(this.data.width) || 0;\r\n    this.height = Number(this.data.h) || Number(this.data.height) || 0;\r\n\r\n    this.isAttached = false;\r\n    this.hasSlide = false;\r\n    this.isDecoding = false;\r\n    /** @type {LoadState} */\r\n    this.state = LOAD_STATE.IDLE;\r\n\r\n    if (this.data.type) {\r\n      this.type = this.data.type;\r\n    } else if (this.data.src) {\r\n      this.type = 'image';\r\n    } else {\r\n      this.type = 'html';\r\n    }\r\n\r\n    this.instance.dispatch('contentInit', { content: this });\r\n  }\r\n\r\n  removePlaceholder() {\r\n    if (this.placeholder && !this.keepPlaceholder()) {\r\n      // With delay, as image might be loaded, but not rendered\r\n      setTimeout(() => {\r\n        if (this.placeholder) {\r\n          this.placeholder.destroy();\r\n          this.placeholder = undefined;\r\n        }\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload content\r\n   *\r\n   * @param {boolean} isLazy\r\n   * @param {boolean} [reload]\r\n   */\r\n  load(isLazy, reload) {\r\n    if (this.slide && this.usePlaceholder()) {\r\n      if (!this.placeholder) {\r\n        const placeholderSrc = this.instance.applyFilters(\r\n          'placeholderSrc',\r\n          // use  image-based placeholder only for the first slide,\r\n          // as rendering (even small stretched thumbnail) is an expensive operation\r\n          (this.data.msrc && this.slide.isFirstSlide) ? this.data.msrc : false,\r\n          this\r\n        );\r\n        this.placeholder = new Placeholder(\r\n          placeholderSrc,\r\n          this.slide.container\r\n        );\r\n      } else {\r\n        const placeholderEl = this.placeholder.element;\r\n        // Add placeholder to DOM if it was already created\r\n        if (placeholderEl && !placeholderEl.parentElement) {\r\n          this.slide.container.prepend(placeholderEl);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.element && !reload) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentLoad', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent()) {\r\n      this.element = createElement('pswp__img', 'img');\r\n      // Start loading only after width is defined, as sizes might depend on it.\r\n      // Due to Safari feature, we must define sizes before srcset.\r\n      if (this.displayedImageWidth) {\r\n        this.loadImage(isLazy);\r\n      }\r\n    } else {\r\n      this.element = createElement('pswp__content', 'div');\r\n      this.element.innerHTML = this.data.html || '';\r\n    }\r\n\r\n    if (reload && this.slide) {\r\n      this.slide.updateContentSize(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload image\r\n   *\r\n   * @param {boolean} isLazy\r\n   */\r\n  loadImage(isLazy) {\r\n    if (!this.isImageContent()\r\n      || !this.element\r\n      || this.instance.dispatch('contentLoadImage', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const imageElement = /** @type HTMLImageElement */ (this.element);\r\n\r\n    this.updateSrcsetSizes();\r\n\r\n    if (this.data.srcset) {\r\n      imageElement.srcset = this.data.srcset;\r\n    }\r\n\r\n    imageElement.src = this.data.src ?? '';\r\n    imageElement.alt = this.data.alt ?? '';\r\n\r\n    this.state = LOAD_STATE.LOADING;\r\n\r\n    if (imageElement.complete) {\r\n      this.onLoaded();\r\n    } else {\r\n      imageElement.onload = () => {\r\n        this.onLoaded();\r\n      };\r\n\r\n      imageElement.onerror = () => {\r\n        this.onError();\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Assign slide to content\r\n   *\r\n   * @param {Slide} slide\r\n   */\r\n  setSlide(slide) {\r\n    this.slide = slide;\r\n    this.hasSlide = true;\r\n    this.instance = slide.pswp;\r\n\r\n    // todo: do we need to unset slide?\r\n  }\r\n\r\n  /**\r\n   * Content load success handler\r\n   */\r\n  onLoaded() {\r\n    this.state = LOAD_STATE.LOADED;\r\n\r\n    if (this.slide && this.element) {\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, content: this });\r\n\r\n      // if content is reloaded\r\n      if (this.slide.isActive\r\n          && this.slide.heavyAppended\r\n          && !this.element.parentNode) {\r\n        this.append();\r\n        this.slide.updateContentSize(true);\r\n      }\r\n\r\n      if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n        this.removePlaceholder();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Content load error handler\r\n   */\r\n  onError() {\r\n    this.state = LOAD_STATE.ERROR;\r\n\r\n    if (this.slide) {\r\n      this.displayError();\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, isError: true, content: this });\r\n      this.instance.dispatch('loadError', { slide: this.slide, content: this });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is currently loading\r\n   */\r\n  isLoading() {\r\n    return this.instance.applyFilters(\r\n      'isContentLoading',\r\n      this.state === LOAD_STATE.LOADING,\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is in error state\r\n   */\r\n  isError() {\r\n    return this.state === LOAD_STATE.ERROR;\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content is image\r\n   */\r\n  isImageContent() {\r\n    return this.type === 'image';\r\n  }\r\n\r\n  /**\r\n   * Update content size\r\n   *\r\n   * @param {Number} width\r\n   * @param {Number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.setDisplayedSize(width, height);\r\n    }\r\n\r\n    if (this.instance.dispatch(\r\n      'contentResize',\r\n      { content: this, width, height }).defaultPrevented\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setWidthHeight(this.element, width, height);\r\n\r\n    if (this.isImageContent() && !this.isError()) {\r\n      const isInitialSizeUpdate = (!this.displayedImageWidth && width);\r\n\r\n      this.displayedImageWidth = width;\r\n      this.displayedImageHeight = height;\r\n\r\n      if (isInitialSizeUpdate) {\r\n        this.loadImage(false);\r\n      } else {\r\n        this.updateSrcsetSizes();\r\n      }\r\n\r\n      if (this.slide) {\r\n        this.instance.dispatch(\r\n          'imageSizeChange',\r\n          { slide: this.slide, width, height, content: this }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content can be zoomed\r\n   */\r\n  isZoomable() {\r\n    return this.instance.applyFilters(\r\n      'isContentZoomable',\r\n      this.isImageContent() && (this.state !== LOAD_STATE.ERROR),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Update image srcset sizes attribute based on width and height\r\n   */\r\n  updateSrcsetSizes() {\r\n    // Handle srcset sizes attribute.\r\n    //\r\n    // Never lower quality, if it was increased previously.\r\n    // Chrome does this automatically, Firefox and Safari do not,\r\n    // so we store largest used size in dataset.\r\n    if (!this.isImageContent() || !this.element || !this.data.srcset) {\r\n      return;\r\n    }\r\n\r\n    const image = /** @type HTMLImageElement */ (this.element);\r\n    const sizesWidth = this.instance.applyFilters(\r\n      'srcsetSizesWidth',\r\n      this.displayedImageWidth,\r\n      this\r\n    );\r\n\r\n    if (\r\n      !image.dataset.largestUsedSize\r\n      || sizesWidth > parseInt(image.dataset.largestUsedSize, 10)\r\n    ) {\r\n      image.sizes = sizesWidth + 'px';\r\n      image.dataset.largestUsedSize = String(sizesWidth);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If content should use a placeholder (from msrc by default)\r\n   */\r\n  usePlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'useContentPlaceholder',\r\n      this.isImageContent(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Preload content with lazy-loading param\r\n   */\r\n  lazyLoad() {\r\n    if (this.instance.dispatch('contentLazyLoad', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.load(true);\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If placeholder should be kept after content is loaded\r\n   */\r\n  keepPlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'isKeepingPlaceholder',\r\n      this.isLoading(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Destroy the content\r\n   */\r\n  destroy() {\r\n    this.hasSlide = false;\r\n    this.slide = undefined;\r\n\r\n    if (this.instance.dispatch('contentDestroy', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.remove();\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.destroy();\r\n      this.placeholder = undefined;\r\n    }\r\n\r\n    if (this.isImageContent() && this.element) {\r\n      this.element.onload = null;\r\n      this.element.onerror = null;\r\n      this.element = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Display error message\r\n   */\r\n  displayError() {\r\n    if (this.slide) {\r\n      let errorMsgEl = createElement('pswp__error-msg', 'div');\r\n      errorMsgEl.innerText = this.instance.options?.errorMsg ?? '';\r\n      errorMsgEl = /** @type {HTMLDivElement} */ (this.instance.applyFilters(\r\n        'contentErrorElement',\r\n        errorMsgEl,\r\n        this\r\n      ));\r\n      this.element = createElement('pswp__content pswp__error-msg-container', 'div');\r\n      this.element.appendChild(errorMsgEl);\r\n      this.slide.container.innerText = '';\r\n      this.slide.container.appendChild(this.element);\r\n      this.slide.updateContentSize(true);\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the content\r\n   */\r\n  append() {\r\n    if (this.isAttached || !this.element) {\r\n      return;\r\n    }\r\n\r\n    this.isAttached = true;\r\n\r\n    if (this.state === LOAD_STATE.ERROR) {\r\n      this.displayError();\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppend', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const supportsDecode = ('decode' in this.element);\r\n\r\n    if (this.isImageContent()) {\r\n      // Use decode() on nearby slides\r\n      //\r\n      // Nearby slide images are in DOM and not hidden via display:none.\r\n      // However, they are placed offscreen (to the left and right side).\r\n      //\r\n      // Some browsers do not composite the image until it's actually visible,\r\n      // using decode() helps.\r\n      //\r\n      // You might ask \"why dont you just decode() and then append all images\",\r\n      // that's because I want to show image before it's fully loaded,\r\n      // as browser can render parts of image while it is loading.\r\n      // We do not do this in Safari due to partial loading bug.\r\n      if (supportsDecode && this.slide && (!this.slide.isActive || isSafari())) {\r\n        this.isDecoding = true;\r\n        // purposefully using finally instead of then,\r\n        // as if srcset sizes changes dynamically - it may cause decode error\r\n        /** @type {HTMLImageElement} */\r\n        (this.element).decode().catch(() => {}).finally(() => {\r\n          this.isDecoding = false;\r\n          this.appendImage();\r\n        });\r\n      } else {\r\n        this.appendImage();\r\n      }\r\n    } else if (this.slide && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate the slide,\r\n   * active slide is generally the current one,\r\n   * meaning the user can see it.\r\n   */\r\n  activate() {\r\n    if (this.instance.dispatch('contentActivate', { content: this }).defaultPrevented\r\n      || !this.slide) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent() && this.isDecoding && !isSafari()) {\r\n      // add image to slide when it becomes active,\r\n      // even if it's not finished decoding\r\n      this.appendImage();\r\n    } else if (this.isError()) {\r\n      this.load(false, true); // try to reload\r\n    }\r\n\r\n    if (this.slide.holderElement) {\r\n      this.slide.holderElement.setAttribute('aria-hidden', 'false');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deactivate the content\r\n   */\r\n  deactivate() {\r\n    this.instance.dispatch('contentDeactivate', { content: this });\r\n    if (this.slide && this.slide.holderElement) {\r\n      this.slide.holderElement.setAttribute('aria-hidden', 'true');\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove the content from DOM\r\n   */\r\n  remove() {\r\n    this.isAttached = false;\r\n\r\n    if (this.instance.dispatch('contentRemove', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.element && this.element.parentNode) {\r\n      this.element.remove();\r\n    }\r\n\r\n    if (this.placeholder && this.placeholder.element) {\r\n      this.placeholder.element.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the image content to slide container\r\n   */\r\n  appendImage() {\r\n    if (!this.isAttached) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppendImage', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    // ensure that element exists and is not already appended\r\n    if (this.slide && this.element && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n\r\n    if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {PhotoSwipeBase} pswp\r\n * @returns {Point}\r\n */\r\nexport function getViewportSize(options, pswp) {\r\n  if (options.getViewportSizeFn) {\r\n    const newViewportSize = options.getViewportSizeFn(options, pswp);\r\n    if (newViewportSize) {\r\n      return newViewportSize;\r\n    }\r\n  }\r\n\r\n  return {\r\n    x: document.documentElement.clientWidth,\r\n\r\n    // TODO: height on mobile is very incosistent due to toolbar\r\n    // find a way to improve this\r\n    //\r\n    // document.documentElement.clientHeight - doesn't seem to work well\r\n    y: window.innerHeight\r\n  };\r\n}\r\n\r\n/**\r\n * Parses padding option.\r\n * Supported formats:\r\n *\r\n * // Object\r\n * padding: {\r\n *  top: 0,\r\n *  bottom: 0,\r\n *  left: 0,\r\n *  right: 0\r\n * }\r\n *\r\n * // A function that returns the object\r\n * paddingFn: (viewportSize, itemData, index) => {\r\n *  return {\r\n *    top: 0,\r\n *    bottom: 0,\r\n *    left: 0,\r\n *    right: 0\r\n *  };\r\n * }\r\n *\r\n * // Legacy variant\r\n * paddingLeft: 0,\r\n * paddingRight: 0,\r\n * paddingTop: 0,\r\n * paddingBottom: 0,\r\n *\r\n * @param {'left' | 'top' | 'bottom' | 'right'} prop\r\n * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n * @param {Point} viewportSize PhotoSwipe viewport size, for example: { x:800, y:600 }\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {number} index Slide index\r\n * @returns {number}\r\n */\r\nexport function parsePaddingOption(prop, options, viewportSize, itemData, index) {\r\n  let paddingValue = 0;\r\n\r\n  if (options.paddingFn) {\r\n    paddingValue = options.paddingFn(viewportSize, itemData, index)[prop];\r\n  } else if (options.padding) {\r\n    paddingValue = options.padding[prop];\r\n  } else {\r\n    const legacyPropName = 'padding' + prop[0].toUpperCase() + prop.slice(1);\r\n    // @ts-expect-error\r\n    if (options[legacyPropName]) {\r\n      // @ts-expect-error\r\n      paddingValue = options[legacyPropName];\r\n    }\r\n  }\r\n\r\n  return Number(paddingValue) || 0;\r\n}\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {Point} viewportSize\r\n * @param {SlideData} itemData\r\n * @param {number} index\r\n * @returns {Point}\r\n */\r\nexport function getPanAreaSize(options, viewportSize, itemData, index) {\r\n  return {\r\n    x: viewportSize.x\r\n      - parsePaddingOption('left', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('right', options, viewportSize, itemData, index),\r\n    y: viewportSize.y\r\n      - parsePaddingOption('top', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('bottom', options, viewportSize, itemData, index)\r\n  };\r\n}\r\n","const MAX_IMAGE_WIDTH = 4000;\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/** @typedef {'fit' | 'fill' | number | ((zoomLevelObject: ZoomLevel) => number)} ZoomLevelOption */\r\n\r\n/**\r\n * Calculates zoom levels for specific slide.\r\n * Depends on viewport size and image size.\r\n */\r\nclass ZoomLevel {\r\n  /**\r\n   * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {number} index Slide index\r\n   * @param {PhotoSwipe} [pswp] PhotoSwipe instance, can be undefined if not initialized yet\r\n   */\r\n  constructor(options, itemData, index, pswp) {\r\n    this.pswp = pswp;\r\n    this.options = options;\r\n    this.itemData = itemData;\r\n    this.index = index;\r\n    /** @type { Point | null } */\r\n    this.panAreaSize = null;\r\n    /** @type { Point | null } */\r\n    this.elementSize = null;\r\n    this.fit = 1;\r\n    this.fill = 1;\r\n    this.vFill = 1;\r\n    this.initial = 1;\r\n    this.secondary = 1;\r\n    this.max = 1;\r\n    this.min = 1;\r\n  }\r\n\r\n  /**\r\n   * Calculate initial, secondary and maximum zoom level for the specified slide.\r\n   *\r\n   * It should be called when either image or viewport size changes.\r\n   *\r\n   * @param {number} maxWidth\r\n   * @param {number} maxHeight\r\n   * @param {Point} panAreaSize\r\n   */\r\n  update(maxWidth, maxHeight, panAreaSize) {\r\n    /** @type {Point} */\r\n    const elementSize = { x: maxWidth, y: maxHeight };\r\n    this.elementSize = elementSize;\r\n    this.panAreaSize = panAreaSize;\r\n\r\n    const hRatio = panAreaSize.x / elementSize.x;\r\n    const vRatio = panAreaSize.y / elementSize.y;\r\n\r\n    this.fit = Math.min(1, hRatio < vRatio ? hRatio : vRatio);\r\n    this.fill = Math.min(1, hRatio > vRatio ? hRatio : vRatio);\r\n\r\n    // zoom.vFill defines zoom level of the image\r\n    // when it has 100% of viewport vertical space (height)\r\n    this.vFill = Math.min(1, vRatio);\r\n\r\n    this.initial = this._getInitial();\r\n    this.secondary = this._getSecondary();\r\n    this.max = Math.max(\r\n      this.initial,\r\n      this.secondary,\r\n      this._getMax()\r\n    );\r\n\r\n    this.min = Math.min(\r\n      this.fit,\r\n      this.initial,\r\n      this.secondary\r\n    );\r\n\r\n    if (this.pswp) {\r\n      this.pswp.dispatch('zoomLevelsUpdate', { zoomLevels: this, slideData: this.itemData });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses user-defined zoom option.\r\n   *\r\n   * @private\r\n   * @param {'initial' | 'secondary' | 'max'} optionPrefix Zoom level option prefix (initial, secondary, max)\r\n   * @returns { number | undefined }\r\n   */\r\n  _parseZoomLevelOption(optionPrefix) {\r\n    const optionName = /** @type {'initialZoomLevel' | 'secondaryZoomLevel' | 'maxZoomLevel'} */ (\r\n      optionPrefix + 'ZoomLevel'\r\n    );\r\n    const optionValue = this.options[optionName];\r\n\r\n    if (!optionValue) {\r\n      return;\r\n    }\r\n\r\n    if (typeof optionValue === 'function') {\r\n      return optionValue(this);\r\n    }\r\n\r\n    if (optionValue === 'fill') {\r\n      return this.fill;\r\n    }\r\n\r\n    if (optionValue === 'fit') {\r\n      return this.fit;\r\n    }\r\n\r\n    return Number(optionValue);\r\n  }\r\n\r\n  /**\r\n   * Get zoom level to which image will be zoomed after double-tap gesture,\r\n   * or when user clicks on zoom icon,\r\n   * or mouse-click on image itself.\r\n   * If you return 1 image will be zoomed to its original size.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getSecondary() {\r\n    let currZoomLevel = this._parseZoomLevelOption('secondary');\r\n\r\n    if (currZoomLevel) {\r\n      return currZoomLevel;\r\n    }\r\n\r\n    // 3x of \"fit\" state, but not larger than original\r\n    currZoomLevel = Math.min(1, this.fit * 3);\r\n\r\n    if (this.elementSize && currZoomLevel * this.elementSize.x > MAX_IMAGE_WIDTH) {\r\n      currZoomLevel = MAX_IMAGE_WIDTH / this.elementSize.x;\r\n    }\r\n\r\n    return currZoomLevel;\r\n  }\r\n\r\n  /**\r\n   * Get initial image zoom level.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getInitial() {\r\n    return this._parseZoomLevelOption('initial') || this.fit;\r\n  }\r\n\r\n  /**\r\n   * Maximum zoom level when user zooms\r\n   * via zoom/pinch gesture,\r\n   * via cmd/ctrl-wheel or via trackpad.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getMax() {\r\n    // max zoom level is x4 from \"fit state\",\r\n    // used for zoom gesture and ctrl/trackpad zoom\r\n    return this._parseZoomLevelOption('max') || Math.max(1, this.fit * 4);\r\n  }\r\n}\r\n\r\nexport default ZoomLevel;\r\n","import { getViewportSize, getPanAreaSize } from '../util/viewport-size.js';\r\nimport ZoomLevel from './zoom-level.js';\r\n\r\n/** @typedef {import('./content.js').default} Content */\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\nconst MIN_SLIDES_TO_CACHE = 5;\r\n\r\n/**\r\n * Lazy-load an image\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n * @param {number} index\r\n * @returns {Content} Image that is being decoded or false.\r\n */\r\nexport function lazyLoadData(itemData, instance, index) {\r\n  const content = instance.createContentFromData(itemData, index);\r\n  /** @type {ZoomLevel | undefined} */\r\n  let zoomLevel;\r\n\r\n  const { options } = instance;\r\n\r\n  // We need to know dimensions of the image to preload it,\r\n  // as it might use srcset, and we need to define sizes\r\n  if (options) {\r\n    zoomLevel = new ZoomLevel(options, itemData, -1);\r\n\r\n    let viewportSize;\r\n    if (instance.pswp) {\r\n      viewportSize = instance.pswp.viewportSize;\r\n    } else {\r\n      viewportSize = getViewportSize(options, instance);\r\n    }\r\n\r\n    const panAreaSize = getPanAreaSize(options, viewportSize, itemData, index);\r\n    zoomLevel.update(content.width, content.height, panAreaSize);\r\n  }\r\n\r\n  content.lazyLoad();\r\n\r\n  if (zoomLevel) {\r\n    content.setDisplayedSize(\r\n      Math.ceil(content.width * zoomLevel.initial),\r\n      Math.ceil(content.height * zoomLevel.initial)\r\n    );\r\n  }\r\n\r\n  return content;\r\n}\r\n\r\n\r\n/**\r\n * Lazy-loads specific slide.\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * By default, it loads image based on viewport size and initial zoom level.\r\n *\r\n * @param {number} index Slide index\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox eventable instance\r\n * @returns {Content | undefined}\r\n */\r\nexport function lazyLoadSlide(index, instance) {\r\n  const itemData = instance.getItemData(index);\r\n\r\n  if (instance.dispatch('lazyLoadSlide', { index, itemData }).defaultPrevented) {\r\n    return;\r\n  }\r\n\r\n  return lazyLoadData(itemData, instance, index);\r\n}\r\n\r\nclass ContentLoader {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    // Total amount of cached images\r\n    this.limit = Math.max(\r\n      pswp.options.preload[0] + pswp.options.preload[1] + 1,\r\n      MIN_SLIDES_TO_CACHE\r\n    );\r\n    /** @type {Content[]} */\r\n    this._cachedItems = [];\r\n  }\r\n\r\n  /**\r\n   * Lazy load nearby slides based on `preload` option.\r\n   *\r\n   * @param {number} [diff] Difference between slide indexes that was changed recently, or 0.\r\n   */\r\n  updateLazy(diff) {\r\n    const { pswp } = this;\r\n\r\n    if (pswp.dispatch('lazyLoad').defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const { preload } = pswp.options;\r\n    const isForward = diff === undefined ? true : (diff >= 0);\r\n    let i;\r\n\r\n    // preload[1] - num items to preload in forward direction\r\n    for (i = 0; i <= preload[1]; i++) {\r\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? i : (-i)));\r\n    }\r\n\r\n    // preload[0] - num items to preload in backward direction\r\n    for (i = 1; i <= preload[0]; i++) {\r\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? (-i) : i));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} initialIndex\r\n   */\r\n  loadSlideByIndex(initialIndex) {\r\n    const index = this.pswp.getLoopedIndex(initialIndex);\r\n    // try to get cached content\r\n    let content = this.getContentByIndex(index);\r\n    if (!content) {\r\n      // no cached content, so try to load from scratch:\r\n      content = lazyLoadSlide(index, this.pswp);\r\n      // if content can be loaded, add it to cache:\r\n      if (content) {\r\n        this.addToCache(content);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Slide} slide\r\n   * @returns {Content}\r\n   */\r\n  getContentBySlide(slide) {\r\n    let content = this.getContentByIndex(slide.index);\r\n    if (!content) {\r\n      // create content if not found in cache\r\n      content = this.pswp.createContentFromData(slide.data, slide.index);\r\n      this.addToCache(content);\r\n    }\r\n\r\n    // assign slide to content\r\n    content.setSlide(slide);\r\n\r\n    return content;\r\n  }\r\n\r\n  /**\r\n   * @param {Content} content\r\n   */\r\n  addToCache(content) {\r\n    // move to the end of array\r\n    this.removeByIndex(content.index);\r\n    this._cachedItems.push(content);\r\n\r\n    if (this._cachedItems.length > this.limit) {\r\n      // Destroy the first content that's not attached\r\n      const indexToRemove = this._cachedItems.findIndex((item) => {\r\n        return !item.isAttached && !item.hasSlide;\r\n      });\r\n      if (indexToRemove !== -1) {\r\n        const removedItem = this._cachedItems.splice(indexToRemove, 1)[0];\r\n        removedItem.destroy();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes an image from cache, does not destroy() it, just removes.\r\n   *\r\n   * @param {number} index\r\n   */\r\n  removeByIndex(index) {\r\n    const indexToRemove = this._cachedItems.findIndex(item => item.index === index);\r\n    if (indexToRemove !== -1) {\r\n      this._cachedItems.splice(indexToRemove, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} index\r\n   * @returns {Content | undefined}\r\n   */\r\n  getContentByIndex(index) {\r\n    return this._cachedItems.find(content => content.index === index);\r\n  }\r\n\r\n  destroy() {\r\n    this._cachedItems.forEach(content => content.destroy());\r\n    this._cachedItems = [];\r\n  }\r\n}\r\n\r\nexport default ContentLoader;\r\n","import Eventable from './eventable.js';\r\nimport { getElementsFromOption } from '../util/util.js';\r\nimport Content from '../slide/content.js';\r\nimport { lazyLoadData } from '../slide/loader.js';\r\n\r\n/** @typedef {import(\"../photoswipe.js\").default} PhotoSwipe */\r\n/** @typedef {import(\"../slide/slide.js\").SlideData} SlideData */\r\n\r\n/**\r\n * PhotoSwipe base class that can retrieve data about every slide.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox\r\n */\r\nclass PhotoSwipeBase extends Eventable {\r\n  /**\r\n   * Get total number of slides\r\n   *\r\n   * @returns {number}\r\n   */\r\n  getNumItems() {\r\n    let numItems = 0;\r\n    const dataSource = this.options?.dataSource;\r\n\r\n    if (dataSource && 'length' in dataSource) {\r\n      // may be an array or just object with length property\r\n      numItems = dataSource.length;\r\n    } else if (dataSource && 'gallery' in dataSource) {\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      if (dataSource.items) {\r\n        numItems = dataSource.items.length;\r\n      }\r\n    }\r\n\r\n    // legacy event, before filters were introduced\r\n    const event = this.dispatch('numItems', {\r\n      dataSource,\r\n      numItems\r\n    });\r\n    return this.applyFilters('numItems', event.numItems, dataSource);\r\n  }\r\n\r\n  /**\r\n   * @param {SlideData} slideData\r\n   * @param {number} index\r\n   * @returns {Content}\r\n   */\r\n  createContentFromData(slideData, index) {\r\n    return new Content(slideData, this, index);\r\n  }\r\n\r\n  /**\r\n   * Get item data by index.\r\n   *\r\n   * \"item data\" should contain normalized information that PhotoSwipe needs to generate a slide.\r\n   * For example, it may contain properties like\r\n   * `src`, `srcset`, `w`, `h`, which will be used to generate a slide with image.\r\n   *\r\n   * @param {number} index\r\n   * @returns {SlideData}\r\n   */\r\n  getItemData(index) {\r\n    const dataSource = this.options?.dataSource;\r\n    /** @type {SlideData | HTMLElement} */\r\n    let dataSourceItem = {};\r\n    if (Array.isArray(dataSource)) {\r\n      // Datasource is an array of elements\r\n      dataSourceItem = dataSource[index];\r\n    } else if (dataSource && 'gallery' in dataSource) {\r\n      // dataSource has gallery property,\r\n      // thus it was created by Lightbox, based on\r\n      // gallery and children options\r\n\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      dataSourceItem = dataSource.items[index];\r\n    }\r\n\r\n    let itemData = dataSourceItem;\r\n\r\n    if (itemData instanceof Element) {\r\n      itemData = this._domElementToItemData(itemData);\r\n    }\r\n\r\n    // Dispatching the itemData event,\r\n    // it's a legacy verion before filters were introduced\r\n    const event = this.dispatch('itemData', {\r\n      itemData: itemData || {},\r\n      index\r\n    });\r\n\r\n    return this.applyFilters('itemData', event.itemData, index);\r\n  }\r\n\r\n  /**\r\n   * Get array of gallery DOM elements,\r\n   * based on childSelector and gallery element.\r\n   *\r\n   * @param {HTMLElement} galleryElement\r\n   * @returns {HTMLElement[]}\r\n   */\r\n  _getGalleryDOMElements(galleryElement) {\r\n    if (this.options?.children || this.options?.childSelector) {\r\n      return getElementsFromOption(\r\n        this.options.children,\r\n        this.options.childSelector,\r\n        galleryElement\r\n      ) || [];\r\n    }\r\n\r\n    return [galleryElement];\r\n  }\r\n\r\n  /**\r\n   * Converts DOM element to item data object.\r\n   *\r\n   * @param {HTMLElement} element DOM element\r\n   * @returns {SlideData}\r\n   */\r\n  _domElementToItemData(element) {\r\n    /** @type {SlideData} */\r\n    const itemData = {\r\n      element\r\n    };\r\n\r\n    const linkEl = /** @type {HTMLAnchorElement} */ (\r\n      element.tagName === 'A'\r\n        ? element\r\n        : element.querySelector('a')\r\n    );\r\n\r\n    if (linkEl) {\r\n      // src comes from data-pswp-src attribute,\r\n      // if it's empty link href is used\r\n      itemData.src = linkEl.dataset.pswpSrc || linkEl.href;\r\n\r\n      if (linkEl.dataset.pswpSrcset) {\r\n        itemData.srcset = linkEl.dataset.pswpSrcset;\r\n      }\r\n\r\n      itemData.width = linkEl.dataset.pswpWidth ? parseInt(linkEl.dataset.pswpWidth, 10) : 0;\r\n      itemData.height = linkEl.dataset.pswpHeight ? parseInt(linkEl.dataset.pswpHeight, 10) : 0;\r\n\r\n      // support legacy w & h properties\r\n      itemData.w = itemData.width;\r\n      itemData.h = itemData.height;\r\n\r\n      if (linkEl.dataset.pswpType) {\r\n        itemData.type = linkEl.dataset.pswpType;\r\n      }\r\n\r\n      const thumbnailEl = element.querySelector('img');\r\n\r\n      if (thumbnailEl) {\r\n        // msrc is URL to placeholder image that's displayed before large image is loaded\r\n        // by default it's displayed only for the first slide\r\n        itemData.msrc = thumbnailEl.currentSrc || thumbnailEl.src;\r\n        itemData.alt = thumbnailEl.getAttribute('alt') ?? '';\r\n      }\r\n\r\n      if (linkEl.dataset.pswpCropped || linkEl.dataset.cropped) {\r\n        itemData.thumbCropped = true;\r\n      }\r\n    }\r\n\r\n    return this.applyFilters('domItemData', itemData, element, linkEl);\r\n  }\r\n\r\n  /**\r\n   * Lazy-load by slide data\r\n   *\r\n   * @param {SlideData} itemData Data about the slide\r\n   * @param {number} index\r\n   * @returns {Content} Image that is being decoded or false.\r\n   */\r\n  lazyLoadData(itemData, index) {\r\n    return lazyLoadData(itemData, this, index);\r\n  }\r\n}\r\n\r\nexport default PhotoSwipeBase;\r\n","import {\r\n  specialKeyUsed,\r\n  getElementsFromOption,\r\n  isPswpClass\r\n} from '../util/util.js';\r\n\r\nimport PhotoSwipeBase from '../core/base.js';\r\nimport { lazyLoadSlide } from '../slide/loader.js';\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('../types.js').Type<T>} Type<T>\r\n */\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('../slide/content.js').default} Content */\r\n/** @typedef {import('../core/eventable.js').PhotoSwipeEventsMap} PhotoSwipeEventsMap */\r\n/** @typedef {import('../core/eventable.js').PhotoSwipeFiltersMap} PhotoSwipeFiltersMap */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {import('../core/eventable.js').EventCallback<T>} EventCallback<T>\r\n */\r\n\r\n/**\r\n * PhotoSwipe Lightbox\r\n *\r\n * - If user has unsupported browser it falls back to default browser action (just opens URL)\r\n * - Binds click event to links that should open PhotoSwipe\r\n * - parses DOM strcture for PhotoSwipe (retrieves large image URLs and sizes)\r\n * - Initializes PhotoSwipe\r\n *\r\n *\r\n * Loader options use the same object as PhotoSwipe, and supports such options:\r\n *\r\n * gallery - Element | Element[] | NodeList | string selector for the gallery element\r\n * children - Element | Element[] | NodeList | string selector for the gallery children\r\n *\r\n */\r\nclass PhotoSwipeLightbox extends PhotoSwipeBase {\r\n  /**\r\n   * @param {PhotoSwipeOptions} [options]\r\n   */\r\n  constructor(options) {\r\n    super();\r\n    /** @type {PhotoSwipeOptions} */\r\n    this.options = options || {};\r\n    this._uid = 0;\r\n    this.shouldOpen = false;\r\n    /**\r\n     * @private\r\n     * @type {Content | undefined}\r\n     */\r\n    this._preloadedContent = undefined;\r\n\r\n    this.onThumbnailsClick = this.onThumbnailsClick.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Initialize lightbox, should be called only once.\r\n   * It's not included in the main constructor, so you may bind events before it.\r\n   */\r\n  init() {\r\n    // Bind click events to each gallery\r\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector)\r\n      .forEach((galleryElement) => {\r\n        galleryElement.addEventListener('click', this.onThumbnailsClick, false);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} e\r\n   */\r\n  onThumbnailsClick(e) {\r\n    // Exit and allow default browser action if:\r\n    if (specialKeyUsed(e) // ... if clicked with a special key (ctrl/cmd...)\r\n        || window.pswp) { // ... if PhotoSwipe is already open\r\n      return;\r\n    }\r\n\r\n    // If both clientX and clientY are 0 or not defined,\r\n    // the event is likely triggered by keyboard,\r\n    // so we do not pass the initialPoint\r\n    //\r\n    // Note that some screen readers emulate the mouse position,\r\n    // so it's not the ideal way to detect them.\r\n    //\r\n    /** @type {Point | null} */\r\n    let initialPoint = { x: e.clientX, y: e.clientY };\r\n\r\n    if (!initialPoint.x && !initialPoint.y) {\r\n      initialPoint = null;\r\n    }\r\n\r\n    let clickedIndex = this.getClickedIndex(e);\r\n    clickedIndex = this.applyFilters('clickedIndex', clickedIndex, e, this);\r\n    /** @type {DataSource} */\r\n    const dataSource = {\r\n      gallery: /** @type {HTMLElement} */ (e.currentTarget)\r\n    };\r\n\r\n    if (clickedIndex >= 0) {\r\n      e.preventDefault();\r\n      this.loadAndOpen(clickedIndex, dataSource, initialPoint);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get index of gallery item that was clicked.\r\n   *\r\n   * @param {MouseEvent} e click event\r\n   * @returns {number}\r\n   */\r\n  getClickedIndex(e) {\r\n    // legacy option\r\n    if (this.options.getClickedIndexFn) {\r\n      return this.options.getClickedIndexFn.call(this, e);\r\n    }\r\n\r\n    const clickedTarget = /** @type {HTMLElement} */ (e.target);\r\n    const childElements = getElementsFromOption(\r\n      this.options.children,\r\n      this.options.childSelector,\r\n      /** @type {HTMLElement} */ (e.currentTarget)\r\n    );\r\n    const clickedChildIndex = childElements.findIndex(\r\n      child => child === clickedTarget || child.contains(clickedTarget)\r\n    );\r\n\r\n    if (clickedChildIndex !== -1) {\r\n      return clickedChildIndex;\r\n    } else if (this.options.children || this.options.childSelector) {\r\n      // click wasn't on a child element\r\n      return -1;\r\n    }\r\n\r\n    // There is only one item (which is the gallery)\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Load and open PhotoSwipe\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource} [dataSource]\r\n   * @param {Point | null} [initialPoint]\r\n   * @returns {boolean}\r\n   */\r\n  loadAndOpen(index, dataSource, initialPoint) {\r\n    // Check if the gallery is already open\r\n    if (window.pswp || !this.options) {\r\n      return false;\r\n    }\r\n\r\n    // Use the first gallery element if dataSource is not provided\r\n    if (!dataSource && this.options.gallery && this.options.children) {\r\n      const galleryElements = getElementsFromOption(this.options.gallery);\r\n      if (galleryElements[0]) {\r\n        dataSource = {\r\n          gallery: galleryElements[0]\r\n        };\r\n      }\r\n    }\r\n\r\n    // set initial index\r\n    this.options.index = index;\r\n\r\n    // define options for PhotoSwipe constructor\r\n    this.options.initialPointerPos = initialPoint;\r\n\r\n    this.shouldOpen = true;\r\n    this.preload(index, dataSource);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Load the main module and the slide content by index\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource} [dataSource]\r\n   */\r\n  preload(index, dataSource) {\r\n    const { options } = this;\r\n\r\n    if (dataSource) {\r\n      options.dataSource = dataSource;\r\n    }\r\n\r\n    // Add the main module\r\n    /** @type {Promise<Type<PhotoSwipe>>[]} */\r\n    const promiseArray = [];\r\n\r\n    const pswpModuleType = typeof options.pswpModule;\r\n    if (isPswpClass(options.pswpModule)) {\r\n      promiseArray.push(Promise.resolve(/** @type {Type<PhotoSwipe>} */ (options.pswpModule)));\r\n    } else if (pswpModuleType === 'string') {\r\n      throw new Error('pswpModule as string is no longer supported');\r\n    } else if (pswpModuleType === 'function') {\r\n      promiseArray.push(/** @type {() => Promise<Type<PhotoSwipe>>} */ (options.pswpModule)());\r\n    } else {\r\n      throw new Error('pswpModule is not valid');\r\n    }\r\n\r\n    // Add custom-defined promise, if any\r\n    if (typeof options.openPromise === 'function') {\r\n      // allow developers to perform some task before opening\r\n      promiseArray.push(options.openPromise());\r\n    }\r\n\r\n    if (options.preloadFirstSlide !== false && index >= 0) {\r\n      this._preloadedContent = lazyLoadSlide(index, this);\r\n    }\r\n\r\n    // Wait till all promises resolve and open PhotoSwipe\r\n    const uid = ++this._uid;\r\n    Promise.all(promiseArray).then((iterableModules) => {\r\n      if (this.shouldOpen) {\r\n        const mainModule = iterableModules[0];\r\n        this._openPhotoswipe(mainModule, uid);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Type<PhotoSwipe> | { default: Type<PhotoSwipe> }} module\r\n   * @param {number} uid\r\n   */\r\n  _openPhotoswipe(module, uid) {\r\n    // Cancel opening if UID doesn't match the current one\r\n    // (if user clicked on another gallery item before current was loaded).\r\n    //\r\n    // Or if shouldOpen flag is set to false\r\n    // (developer may modify it via public API)\r\n    if (uid !== this._uid && this.shouldOpen) {\r\n      return;\r\n    }\r\n\r\n    this.shouldOpen = false;\r\n\r\n    // PhotoSwipe is already open\r\n    if (window.pswp) {\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Pass data to PhotoSwipe and open init\r\n     *\r\n     * @type {PhotoSwipe}\r\n     */\r\n    const pswp = typeof module === 'object'\r\n        ? new module.default(this.options) // eslint-disable-line\r\n        : new module(this.options); // eslint-disable-line\r\n\r\n    this.pswp = pswp;\r\n    window.pswp = pswp;\r\n\r\n    // map listeners from Lightbox to PhotoSwipe Core\r\n    /** @type {(keyof PhotoSwipeEventsMap)[]} */\r\n    (Object.keys(this._listeners)).forEach((name) => {\r\n      this._listeners[name]?.forEach((fn) => {\r\n        pswp.on(name, /** @type {EventCallback<typeof name>} */(fn));\r\n      });\r\n    });\r\n\r\n    // same with filters\r\n    /** @type {(keyof PhotoSwipeFiltersMap)[]} */\r\n    (Object.keys(this._filters)).forEach((name) => {\r\n      this._filters[name]?.forEach((filter) => {\r\n        pswp.addFilter(name, filter.fn, filter.priority);\r\n      });\r\n    });\r\n\r\n    if (this._preloadedContent) {\r\n      pswp.contentLoader.addToCache(this._preloadedContent);\r\n      this._preloadedContent = undefined;\r\n    }\r\n\r\n    pswp.on('destroy', () => {\r\n      // clean up public variables\r\n      this.pswp = undefined;\r\n      delete window.pswp;\r\n    });\r\n\r\n    pswp.init();\r\n  }\r\n\r\n  /**\r\n   * Unbinds all events, closes PhotoSwipe if it's open.\r\n   */\r\n  destroy() {\r\n    this.pswp?.destroy();\r\n\r\n    this.shouldOpen = false;\r\n    this._listeners = {};\r\n\r\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector)\r\n      .forEach((galleryElement) => {\r\n        galleryElement.removeEventListener('click', this.onThumbnailsClick, false);\r\n      });\r\n  }\r\n}\r\n\r\nexport default PhotoSwipeLightbox;\r\n","<template>\r\n  <div\r\n    :id=\"galleryID\"\r\n    :class=\"className\"\r\n    class=\"w-100 overflow-hidden clear-float img-viewer\"\r\n  >\r\n    <a\r\n      v-for=\"(image, key) in imagesData\"\r\n      :key=\"key\"\r\n      :href=\"getImg(image.largeURL)\"\r\n      target=\"_blank\"\r\n      rel=\"noreferrer\"\r\n      :data-pswp-width=\"image.width\"\r\n      :data-pswp-height=\"image.height\"\r\n      :class=\"key == imagesData.length - 1 ? 'mr-0' : ''\"\r\n      class=\"d-block quartor card p-4 float-left\"\r\n    >\r\n      <img class=\"w-100\" :src=\"getImg(image.thumbnailURL)\" alt=\"\" />\r\n    </a>\r\n  </div>\r\n</template>\r\n  \r\n  <script>\r\nimport PhotoSwipeLightbox from \"photoswipe/lightbox\";\r\nimport \"photoswipe/style.css\";\r\n\r\nexport default {\r\n  name: \"SimpleGallery\",\r\n  props: {\r\n    galleryID: String,\r\n    images: Array,\r\n    className: String,\r\n  },\r\n  computed: {\r\n    getImg() {\r\n      return function (url) {\r\n        return require(`@/assets/${url}`);\r\n      };\r\n    },\r\n  },\r\n  setup(props) {\r\n    return {\r\n      imagesData: props.images,\r\n    };\r\n  },\r\n  mounted() {\r\n    if (!this.lightbox) {\r\n      this.lightbox = new PhotoSwipeLightbox({\r\n        gallery: \"#\" + this.$props.galleryID,\r\n        children: \"a\",\r\n        pswpModule: () => import(\"photoswipe\"),\r\n      });\r\n      this.lightbox.init();\r\n    }\r\n  },\r\n  unmounted() {\r\n    if (this.lightbox) {\r\n      this.lightbox.destroy();\r\n      this.lightbox = null;\r\n    }\r\n  },\r\n  methods: {},\r\n};\r\n</script>\r\n  ","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./img-viewer.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./img-viewer.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./img-viewer.vue?vue&type=template&id=5f257d14\"\nimport script from \"./img-viewer.vue?vue&type=script&lang=js\"\nexport * from \"./img-viewer.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div class=\"project page-container overflow-hidden\">\r\n    <h1 class=\"project-name\">{{ currentPorject.name }}</h1>\r\n    <div class=\"d-flex text-wrap\">\r\n      <div class=\"mr-8 flex-1\">\r\n        <h3 class=\"mt-0 mb-text\">Company</h3>\r\n        <p class=\"text-light mt-0 mb-content\">{{ currentPorject.company }}</p>\r\n      </div>\r\n      <div class=\"flex-3\">\r\n        <h3 class=\"mt-0 mb-text\">My Role</h3>\r\n        <p class=\"text-light mt-0 mb-content\">{{ currentPorject.role }}</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"d-flex text-wrap mb-paragraph\">\r\n      <div class=\"mr-8 flex-1\">\r\n        <h3 class=\"mt-0 mb-text\">Duration</h3>\r\n        <p class=\"text-light mt-0 mb-0\">{{ currentPorject.year }}</p>\r\n      </div>\r\n      <div class=\"flex-3\">\r\n        <h3 class=\"mt-0 mb-text\">My Deliverable</h3>\r\n        <p class=\"text-light mt-0 mb-0\">{{ currentPorject.deliverable }}</p>\r\n      </div>\r\n    </div>\r\n    <template\r\n      v-if=\"!!currentPorject.paragraphs && currentPorject.paragraphs.length > 0\"\r\n    >\r\n      <div\r\n        v-for=\"(v, i) in currentPorject.paragraphs\"\r\n        :key=\"i\"\r\n        class=\"info-paragraph\"\r\n      >\r\n        <h2 v-html=\"v.title\"></h2>\r\n        <template v-for=\"(item, index) in v.content\">\r\n          <img\r\n            :key=\"index + 'i'\"\r\n            v-if=\"item.type && item.type == 'img'\"\r\n            class=\"info-img\"\r\n            :class=\"item.class\"\r\n            :src=\"getImg(item.url)\"\r\n          />\r\n          <div\r\n            :key=\"index + 'r'\"\r\n            :class=\"item.class\"\r\n            v-else-if=\"item.type && item.type == 'rich'\"\r\n            v-html=\"item.content\"\r\n          ></div>\r\n          <div\r\n            :key=\"index + 's'\"\r\n            class=\"slide-box\"\r\n            :class=\"item.class\"\r\n            @mouseleave=\"resetSlide(item.name)\"\r\n            v-else-if=\"item.type && item.type == 'slide'\"\r\n          >\r\n            <template v-for=\"(temp, idx) in item.images\">\r\n              <img\r\n                :key=\"idx\"\r\n                class=\"slide-img\"\r\n                :class=\"getClass(idx, item.name)\"\r\n                :src=\"getImg(temp)\"\r\n                @mouseenter=\"onHover(idx, item.name)\"\r\n              />\r\n            </template>\r\n          </div>\r\n          <div\r\n            :key=\"index + 'sw'\"\r\n            class=\"position-relative w-100 overflow-hidden\"\r\n            :class=\"item.class\"\r\n            v-else-if=\"item.type && item.type == 'swipe'\"\r\n          >\r\n            <img\r\n              class=\"img-icon arrow-left\"\r\n              @click=\"onSwipe(0)\"\r\n              :src=\"getImg('aftersale/arrowleft.png')\"\r\n            />\r\n            <img\r\n              class=\"img-icon arrow-right\"\r\n              @click=\"onSwipe(1)\"\r\n              :src=\"getImg('aftersale/arrowright.png')\"\r\n            />\r\n            <template v-for=\"(temp, idx) in item.images\">\r\n              <img\r\n                :key=\"idx\"\r\n                class=\"w-100 swipe-img\"\r\n                :class=\"idx == 0 && swipeIndex ? 'swiped' : ''\"\r\n                :src=\"getImg(temp)\"\r\n              />\r\n            </template>\r\n          </div>\r\n          <img-viewer\r\n            :key=\"index + 'iv'\"\r\n            :class=\"item.className\"\r\n            :galleryID=\"item.id\"\r\n            :images=\"item.images\"\r\n            v-else-if=\"item.type && item.type == 'imgViewer'\"\r\n          />\r\n          <p class=\"info-text\" :key=\"index + 'p'\" v-else v-html=\"item\"></p>\r\n        </template>\r\n      </div>\r\n    </template>\r\n  </div>\r\n</template>\r\n      \r\n      <script>\r\nimport { PROJECT_DETAILS, SLIDE_INDICES } from \"@/constant\";\r\nimport imgViewer from \"@/components/img-viewer.vue\";\r\nexport default {\r\n  name: \"ProjectDetail\",\r\n  components: { imgViewer },\r\n  data() {\r\n    return {\r\n      PROJECT_DETAILS,\r\n      projectName: \"\",\r\n      currentPorject: {},\r\n      slideIndices: {},\r\n      swipeIndex: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    getImg() {\r\n      return function (url) {\r\n        return require(`@/assets/${url}`);\r\n      };\r\n    },\r\n    getClass() {\r\n      return function (index, name) {\r\n        const chosen = this.slideIndices[name];\r\n        if (index == chosen) {\r\n          return \"active\";\r\n        } else if (index == chosen + 1 || index == chosen - 1) {\r\n          return \"secondary\";\r\n        }\r\n        return \"\";\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    onHover(index, name) {\r\n      this.slideIndices = { ...this.slideIndices, [name]: index };\r\n    },\r\n    resetSlide(name) {\r\n      this.slideIndices = { ...this.slideIndices, [name]: SLIDE_INDICES[name] };\r\n    },\r\n    onSwipe(val) {\r\n      this.swipeIndex = val;\r\n    },\r\n  },\r\n  mounted() {\r\n    const {\r\n      params: { projectName },\r\n    } = this.$route;\r\n    this.projectName = projectName;\r\n    this.currentPorject = { ...this.PROJECT_DETAILS[projectName] };\r\n    this.slideIndices = { ...SLIDE_INDICES };\r\n  },\r\n};\r\n</script>\r\n      \r\n      <style>\r\n@import \"../style/project.scss\";\r\n</style>\r\n      ","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./projectDetail.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./projectDetail.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./projectDetail.vue?vue&type=template&id=9c7be11e\"\nimport script from \"./projectDetail.vue?vue&type=script&lang=js\"\nexport * from \"./projectDetail.vue?vue&type=script&lang=js\"\nimport style0 from \"./projectDetail.vue?vue&type=style&index=0&id=9c7be11e&prod&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","_v","_s","currentPorject","name","company","role","year","deliverable","paragraphs","length","_l","v","i","key","domProps","title","content","item","index","type","class","attrs","getImg","url","on","$event","resetSlide","images","temp","idx","getClass","onHover","onSwipe","swipeIndex","className","id","_e","staticRenderFns","galleryID","imagesData","image","largeURL","width","height","thumbnailURL","createElement","tagName","appendToEl","el","document","appendChild","toTransformString","x","y","scale","propValue","undefined","setWidthHeight","w","h","style","LOAD_STATE","IDLE","LOADING","LOADED","ERROR","specialKeyUsed","e","button","ctrlKey","metaKey","altKey","shiftKey","getElementsFromOption","option","legacySelector","parent","elements","Element","NodeList","Array","isArray","from","selector","querySelectorAll","isPswpClass","fn","prototype","goTo","isSafari","navigator","vendor","match","PhotoSwipeEvent","constructor","details","defaultPrevented","Object","assign","preventDefault","Eventable","_listeners","_filters","pswp","options","addFilter","priority","_this$_filters$name","_this$_filters$name2","_this$pswp","push","sort","f1","f2","removeFilter","filter","applyFilters","args","_this$_filters$name3","forEach","apply","_this$_listeners$name","_this$pswp2","off","_this$pswp3","listener","dispatch","_this$_listeners$name2","event","call","Placeholder","imageSrc","container","element","imgEl","decoding","alt","src","setAttribute","setDisplayedSize","transformOrigin","transform","destroy","_this$element","parentNode","remove","Content","itemData","instance","data","placeholder","slide","displayedImageWidth","displayedImageHeight","Number","isAttached","hasSlide","isDecoding","state","removePlaceholder","keepPlaceholder","setTimeout","load","isLazy","reload","usePlaceholder","placeholderEl","parentElement","prepend","placeholderSrc","msrc","isFirstSlide","isImageContent","loadImage","innerHTML","html","updateContentSize","_this$data$src","_this$data$alt","imageElement","updateSrcsetSizes","srcset","complete","onLoaded","onload","onerror","onError","setSlide","isActive","heavyAppended","append","displayError","isError","isLoading","isInitialSizeUpdate","isZoomable","sizesWidth","dataset","largestUsedSize","parseInt","sizes","String","lazyLoad","_this$instance$option","_this$instance$option2","errorMsgEl","innerText","errorMsg","supportsDecode","decode","catch","finally","appendImage","activate","holderElement","deactivate","getViewportSize","getViewportSizeFn","newViewportSize","documentElement","clientWidth","window","innerHeight","parsePaddingOption","prop","viewportSize","paddingValue","paddingFn","padding","legacyPropName","toUpperCase","slice","getPanAreaSize","MAX_IMAGE_WIDTH","ZoomLevel","panAreaSize","elementSize","fit","fill","vFill","initial","secondary","max","min","update","maxWidth","maxHeight","hRatio","vRatio","Math","_getInitial","_getSecondary","_getMax","zoomLevels","slideData","_parseZoomLevelOption","optionPrefix","optionName","optionValue","currZoomLevel","lazyLoadData","createContentFromData","zoomLevel","ceil","lazyLoadSlide","getItemData","PhotoSwipeBase","getNumItems","_this$options","numItems","dataSource","items","_getGalleryDOMElements","gallery","_this$options2","dataSourceItem","_domElementToItemData","galleryElement","_this$options3","_this$options4","children","childSelector","linkEl","querySelector","pswpSrc","href","pswpSrcset","pswpWidth","pswpHeight","pswpType","thumbnailEl","_thumbnailEl$getAttri","currentSrc","getAttribute","pswpCropped","cropped","thumbCropped","PhotoSwipeLightbox","super","_uid","shouldOpen","_preloadedContent","onThumbnailsClick","bind","init","gallerySelector","addEventListener","initialPoint","clientX","clientY","clickedIndex","getClickedIndex","currentTarget","loadAndOpen","getClickedIndexFn","clickedTarget","target","childElements","clickedChildIndex","findIndex","child","contains","galleryElements","initialPointerPos","preload","promiseArray","pswpModuleType","pswpModule","Promise","resolve","Error","openPromise","preloadFirstSlide","uid","all","then","iterableModules","mainModule","_openPhotoswipe","module","default","keys","contentLoader","addToCache","removeEventListener","props","computed","require","setup","mounted","lightbox","$props","unmounted","methods","component","components","imgViewer","PROJECT_DETAILS","projectName","slideIndices","chosen","SLIDE_INDICES","val","params","$route"],"sourceRoot":""}